#!/usr/bin/python
import sys
import swsssdk

argc = len(sys.argv)
if argc == 2 and sys.argv[1] == '-h':
    print("""
Example 1: sonic-db-cli CONFIG_DB keys *
Example 2: sonic-db-cli APPL_DB HGETALL VLAN_TABLE:Vlan10
Example 3: sonic-db-cli APPL_DB HGET VLAN_TABLE:Vlan10 mtu
Example 4: sonic-db-cli APPL_DB EVAL "return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}" 2 k1 k2 v1 v2
""")
elif argc < 3:
    msg = "'Usage: sonic-db-cli <db_name> <cmd> [arg [arg ...]]'. See 'sonic-db-cli -h' for detail examples."
    print >> sys.stderr, msg
else:
    dbname = sys.argv[1]
    dbconn = swsssdk.SonicV2Connector(use_unix_socket_path=False)
    try:
        dbconn.connect(dbname)
    except RuntimeError:
        msg = "Invalid database name input : '{}'".format(sys.argv[1])
        print >> sys.stderr, msg
    else:
        client = dbconn.get_redis_client(dbname)
        args = sys.argv[2:]
        resp = client.execute_command(*args)
        """
        sonic-db-cli output format mimic the non-tty mode output format from redis-cli
        based on our usage in SONiC, None and list type output from python API needs to be modified
        with these changes, it is enough for us to mimic redis-cli in SONiC so far since no application uses tty mode redis-cli output
        """
        if resp is None:
            print ""
        elif isinstance(resp, list):
            print "\n".join(resp)
        else:
            print resp
